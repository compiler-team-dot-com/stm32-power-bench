ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_pwr.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_PWR_DeInit
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_PWR_DeInit:
  27              	.LFB130:
  28              		.file 1 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c"
   1:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
   2:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   ******************************************************************************
   3:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @file    stm32f3xx_hal_pwr.c
   4:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @author  MCD Application Team
   5:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following
   7:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *           + Initialization/de-initialization functions
   9:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *           + Peripheral Control functions
  10:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *
  11:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   @verbatim
  12:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   ******************************************************************************
  13:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @attention
  14:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *
  15:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  16:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * All rights reserved.</center></h2>
  17:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *
  18:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  19:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * the "License"; You may not use this file except in compliance with the
  20:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * License. You may obtain a copy of the License at:
  21:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *                        opensource.org/licenses/BSD-3-Clause
  22:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *
  23:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   ******************************************************************************
  24:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
  25:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  26:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  27:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** #include "stm32f3xx_hal.h"
  28:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  29:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /** @addtogroup STM32F3xx_HAL_Driver
  30:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @{
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 2


  31:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
  32:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  33:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /** @defgroup PWR PWR
  34:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief PWR HAL module driver
  35:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @{
  36:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
  37:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  38:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  39:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  40:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  41:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  42:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  43:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  44:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  45:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /* Private functions ---------------------------------------------------------*/
  46:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  47:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  48:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @{
  49:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
  50:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  51:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions 
  52:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  53:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *
  54:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** @verbatim
  55:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****  ===============================================================================
  56:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  57:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****  ===============================================================================
  58:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     [..]
  59:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       After reset, the backup domain (RTC registers, RTC backup data
  60:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       registers and backup SRAM) is protected against possible unwanted
  61:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       write accesses.
  62:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       To enable access to the RTC Domain and RTC registers, proceed as follows:
  63:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****         (+) Enable the Power Controller (PWR) APB1 interface clock using the
  64:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****             __HAL_RCC_PWR_CLK_ENABLE() macro.
  65:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****         (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  66:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  67:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** @endverbatim
  68:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @{
  69:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
  70:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  71:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
  72:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Deinitializes the PWR peripheral registers to their default reset values.
  73:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
  74:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
  75:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
  76:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  77:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  34              		.loc 1 77 3 view .LVU1
  35 0000 044B     		ldr	r3, .L2
  36 0002 1A69     		ldr	r2, [r3, #16]
  37 0004 42F08052 		orr	r2, r2, #268435456
  38 0008 1A61     		str	r2, [r3, #16]
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 3


  78:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  39              		.loc 1 78 3 view .LVU2
  40 000a 1A69     		ldr	r2, [r3, #16]
  41 000c 22F08052 		bic	r2, r2, #268435456
  42 0010 1A61     		str	r2, [r3, #16]
  79:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
  43              		.loc 1 79 1 is_stmt 0 view .LVU3
  44 0012 7047     		bx	lr
  45              	.L3:
  46              		.align	2
  47              	.L2:
  48 0014 00100240 		.word	1073876992
  49              		.cfi_endproc
  50              	.LFE130:
  52              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  53              		.align	1
  54              		.global	HAL_PWR_EnableBkUpAccess
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  58              		.fpu fpv4-sp-d16
  60              	HAL_PWR_EnableBkUpAccess:
  61              	.LFB131:
  80:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  81:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
  82:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Enables access to the backup domain (RTC registers, RTC
  83:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
  84:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note  If the HSE divided by 32 is used as the RTC clock, the
  85:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
  86:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
  87:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
  88:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
  89:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
  62              		.loc 1 89 1 is_stmt 1 view -0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  90:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   SET_BIT(PWR->CR, PWR_CR_DBP);  
  67              		.loc 1 90 3 view .LVU5
  68 0000 024A     		ldr	r2, .L5
  69 0002 1368     		ldr	r3, [r2]
  70 0004 43F48073 		orr	r3, r3, #256
  71 0008 1360     		str	r3, [r2]
  91:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
  72              		.loc 1 91 1 is_stmt 0 view .LVU6
  73 000a 7047     		bx	lr
  74              	.L6:
  75              		.align	2
  76              	.L5:
  77 000c 00700040 		.word	1073770496
  78              		.cfi_endproc
  79              	.LFE131:
  81              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
  82              		.align	1
  83              		.global	HAL_PWR_DisableBkUpAccess
  84              		.syntax unified
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 4


  85              		.thumb
  86              		.thumb_func
  87              		.fpu fpv4-sp-d16
  89              	HAL_PWR_DisableBkUpAccess:
  90              	.LFB132:
  92:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
  93:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
  94:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Disables access to the backup domain (RTC registers, RTC
  95:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         backup data registers and backup SRAM).
  96:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note  If the HSE divided by 32 is used as the RTC clock, the
  97:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         Backup Domain Access should be kept enabled.
  98:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
  99:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 100:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 101:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
  91              		.loc 1 101 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
 102:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR, PWR_CR_DBP);  
  96              		.loc 1 102 3 view .LVU8
  97 0000 024A     		ldr	r2, .L8
  98 0002 1368     		ldr	r3, [r2]
  99 0004 23F48073 		bic	r3, r3, #256
 100 0008 1360     		str	r3, [r2]
 103:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 101              		.loc 1 103 1 is_stmt 0 view .LVU9
 102 000a 7047     		bx	lr
 103              	.L9:
 104              		.align	2
 105              	.L8:
 106 000c 00700040 		.word	1073770496
 107              		.cfi_endproc
 108              	.LFE132:
 110              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 111              		.align	1
 112              		.global	HAL_PWR_EnableWakeUpPin
 113              		.syntax unified
 114              		.thumb
 115              		.thumb_func
 116              		.fpu fpv4-sp-d16
 118              	HAL_PWR_EnableWakeUpPin:
 119              	.LVL0:
 120              	.LFB133:
 104:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 105:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 106:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @}
 107:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 108:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 109:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions 
 110:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions
 111:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *
 112:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** @verbatim
 113:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 114:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****  ===============================================================================
 115:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 5


 116:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****  ===============================================================================
 117:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     
 118:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     *** WakeUp pin configuration ***
 119:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     ================================
 120:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     [..]
 121:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) WakeUp pin is used to wakeup the system from Standby mode. This pin is
 122:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           forced in input pull down configuration and is active on rising edges.
 123:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) There are up to three WakeUp pins:
 124:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++)WakeUp Pin 1 on PA.00.
 125:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++)WakeUp Pin 2 on PC.13 (STM32F303xC, STM32F303xE only).
 126:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++)WakeUp Pin 3 on PE.06.
 127:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 128:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     *** Main and Backup Regulators configuration ***
 129:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     ================================================
 130:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     [..]
 131:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) When the backup domain is supplied by VDD (analog switch connected to VDD)
 132:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           the backup SRAM is powered from VDD which replaces the VBAT power supply to
 133:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           save battery life.
 134:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 135:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) The backup SRAM is not mass erased by a tamper event. It is read
 136:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           protected to prevent confidential data, such as cryptographic private
 137:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           key, from being accessed. The backup SRAM can be erased only through
 138:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           the Flash interface when a protection level change from level 1 to
 139:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           level 0 is requested.
 140:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       -@- Refer to the description of Read protection (RDP) in the Flash
 141:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           programming manual.
 142:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 143:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****         Refer to the datasheets for more details.
 144:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 145:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     *** Low Power modes configuration ***
 146:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     =====================================
 147:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     [..]
 148:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       The devices feature 3 low-power modes:
 149:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running.
 150:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) Stop mode: all clocks are stopped, regulator running, regulator
 151:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           in low power mode
 152:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) Standby mode: 1.2V domain powered off (mode not available on STM32F3x8 devices).
 153:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 154:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****    *** Sleep mode ***
 155:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****    ==================
 156:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     [..]
 157:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) Entry:
 158:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           The Sleep mode is entered by using the HAL_PWR_EnterSLEEPMode(PWR_MAINREGULATOR_ON, PWR_S
 159:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****               functions with
 160:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 161:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 162:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****      
 163:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) Exit:
 164:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****         (++) Any peripheral interrupt acknowledged by the nested vectored interrupt
 165:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****               controller (NVIC) can wake up the device from Sleep mode.
 166:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 167:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****    *** Stop mode ***
 168:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****    =================
 169:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     [..]
 170:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       In Stop mode, all clocks in the 1.8V domain are stopped, the PLL, the HSI,
 171:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       and the HSE RC oscillators are disabled. Internal SRAM and register contents
 172:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       are preserved.
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 6


 173:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       The voltage regulator can be configured either in normal or low-power mode to minimize the co
 174:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 175:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) Entry:
 176:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           The Stop mode is entered using the HAL_PWR_EnterSTOPMode(PWR_MAINREGULATOR_ON, PWR_STOPEN
 177:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****              function with:
 178:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) Main regulator ON or
 179:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) Low Power regulator ON.
 180:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) PWR_STOPENTRY_WFI: enter STOP mode with WFI instruction or
 181:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) PWR_STOPENTRY_WFE: enter STOP mode with WFE instruction
 182:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) Exit:
 183:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) Any EXTI Line (Internal or External) configured in Interrupt/Event mode.
 184:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) Some specific communication peripherals (CEC, USART, I2C) interrupts, 
 185:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****                when programmed in wakeup mode (the peripheral must be 
 186:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****                programmed in wakeup mode and the corresponding interrupt vector 
 187:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****                must be enabled in the NVIC).
 188:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 189:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****    *** Standby mode ***
 190:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****    ====================
 191:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****      [..]
 192:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       The Standby mode allows to achieve the lowest power consumption. It is based
 193:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       on the Cortex-M4 deep sleep mode, with the voltage regulator disabled.
 194:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       The 1.8V domain is consequently powered off. The PLL, the HSI oscillator and
 195:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       the HSE oscillator are also switched off. SRAM and register contents are lost
 196:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       except for the RTC registers, RTC backup registers, backup SRAM and Standby
 197:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       circuitry.
 198:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       The voltage regulator is OFF.
 199:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 200:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) Entry:
 201:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) The Standby mode is entered using the HAL_PWR_EnterSTANDBYMode() function.
 202:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (+) Exit:
 203:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****           (++) WKUP pin rising edge, RTC alarm (Alarm A and Alarm B), RTC wakeup,
 204:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****                tamper event, time-stamp event, external reset in NRST pin, IWDG reset.
 205:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 206:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****    *** Auto-wakeup (AWU) from low-power mode ***
 207:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****    =============================================
 208:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     [..]
 209:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC
 210:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       Wakeup event, a tamper event, a time-stamp event, or a comparator event, 
 211:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       without depending on an external interrupt (Auto-wakeup mode).
 212:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 213:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     (+) RTC auto-wakeup (AWU) from the Stop and Standby modes
 214:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 215:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to
 216:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****             configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 217:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 218:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it
 219:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****            is necessary to configure the RTC to detect the tamper or time stamp event using the
 220:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****            HAL_RTC_SetTimeStamp_IT() or HAL_RTC_SetTamper_IT() functions.
 221:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 222:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (++) To wake up from the Stop mode with an RTC WakeUp event, it is necessary to
 223:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****            configure the RTC to generate the RTC WakeUp event using the HAL_RTC_SetWakeUpTimer_IT()
 224:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 225:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     (+) Comparator auto-wakeup (AWU) from the Stop mode
 226:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 227:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****       (++) To wake up from the Stop mode with a comparator wakeup event, it is necessary to:
 228:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****            (+++) Configure the EXTI Line associated with the comparator (example EXTI Line 22 for c
 229:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****                  to be sensitive to to the selected edges (falling, rising or falling 
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 7


 230:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****                  and rising) (Interrupt or Event modes) using the EXTI_Init() function.
 231:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****            (+++) Configure the comparator to generate the event.      
 232:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** @endverbatim
 233:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @{
 234:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 235:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 236:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 237:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Enables the WakeUp PINx functionality.
 238:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to enable.
 239:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         This parameter can be value of :
 240:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *           @ref PWR_WakeUp_Pins
 241:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
 242:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 243:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinx)
 244:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
 121              		.loc 1 244 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 245:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Check the parameters */
 246:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 126              		.loc 1 246 3 view .LVU11
 247:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Enable the EWUPx pin */
 248:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   SET_BIT(PWR->CSR, WakeUpPinx);
 127              		.loc 1 248 3 view .LVU12
 128 0000 024A     		ldr	r2, .L11
 129 0002 5368     		ldr	r3, [r2, #4]
 130 0004 0343     		orrs	r3, r3, r0
 131 0006 5360     		str	r3, [r2, #4]
 249:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 132              		.loc 1 249 1 is_stmt 0 view .LVU13
 133 0008 7047     		bx	lr
 134              	.L12:
 135 000a 00BF     		.align	2
 136              	.L11:
 137 000c 00700040 		.word	1073770496
 138              		.cfi_endproc
 139              	.LFE133:
 141              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 142              		.align	1
 143              		.global	HAL_PWR_DisableWakeUpPin
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 147              		.fpu fpv4-sp-d16
 149              	HAL_PWR_DisableWakeUpPin:
 150              	.LVL1:
 151              	.LFB134:
 250:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 251:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 252:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Disables the WakeUp PINx functionality.
 253:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @param WakeUpPinx Specifies the Power Wake-Up pin to disable.
 254:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         This parameter can be values of :
 255:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *           @ref PWR_WakeUp_Pins
 256:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
 257:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 8


 258:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 259:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
 152              		.loc 1 259 1 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 260:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Check the parameters */
 261:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 157              		.loc 1 261 3 view .LVU15
 262:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Disable the EWUPx pin */
 263:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   CLEAR_BIT(PWR->CSR, WakeUpPinx);
 158              		.loc 1 263 3 view .LVU16
 159 0000 024A     		ldr	r2, .L14
 160 0002 5368     		ldr	r3, [r2, #4]
 161 0004 23EA0003 		bic	r3, r3, r0
 162 0008 5360     		str	r3, [r2, #4]
 264:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 163              		.loc 1 264 1 is_stmt 0 view .LVU17
 164 000a 7047     		bx	lr
 165              	.L15:
 166              		.align	2
 167              	.L14:
 168 000c 00700040 		.word	1073770496
 169              		.cfi_endproc
 170              	.LFE134:
 172              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 173              		.align	1
 174              		.global	HAL_PWR_EnterSLEEPMode
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv4-sp-d16
 180              	HAL_PWR_EnterSLEEPMode:
 181              	.LVL2:
 182              	.LFB135:
 265:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 266:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 267:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Enters Sleep mode.
 268:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note  In Sleep mode, all I/O pins keep the same state as in Run mode.
 269:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in SLEEP mode.
 270:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 271:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: SLEEP mode with regulator ON
 272:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: SLEEP mode with low power regulator ON
 273:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note This parameter has no effect in F3 family and is just maintained to 
 274:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *       offer full portability of other STM32 families softwares.
 275:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @param SLEEPEntry Specifies if SLEEP mode is entered with WFI or WFE instruction.
 276:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *           When WFI entry is used, tick interrupt have to be disabled if not desired as 
 277:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *           the interrupt wake up source.
 278:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *           This parameter can be one of the following values:
 279:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 280:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *            @arg PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 281:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
 282:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 283:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 284:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
 183              		.loc 1 284 1 is_stmt 1 view -0
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 9


 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 285:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Check the parameters */
 286:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 188              		.loc 1 286 3 view .LVU19
 287:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 288:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 289:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);
 189              		.loc 1 289 3 view .LVU20
 190              		.loc 1 289 12 is_stmt 0 view .LVU21
 191 0000 064A     		ldr	r2, .L20
 192 0002 1369     		ldr	r3, [r2, #16]
 193 0004 23F00403 		bic	r3, r3, #4
 194 0008 1361     		str	r3, [r2, #16]
 290:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 291:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 292:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 195              		.loc 1 292 3 is_stmt 1 view .LVU22
 196              		.loc 1 292 5 is_stmt 0 view .LVU23
 197 000a 0129     		cmp	r1, #1
 198 000c 03D0     		beq	.L19
 293:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   {
 294:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 295:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     __WFI();
 296:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   }
 297:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   else
 298:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   {
 299:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     /* Request Wait For Event */
 300:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     __SEV();
 199              		.loc 1 300 5 is_stmt 1 view .LVU24
 200              		.syntax unified
 201              	@ 300 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c" 1
 202 000e 40BF     		sev
 203              	@ 0 "" 2
 301:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     __WFE();
 204              		.loc 1 301 5 view .LVU25
 205              	@ 301 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c" 1
 206 0010 20BF     		wfe
 207              	@ 0 "" 2
 302:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     __WFE();
 208              		.loc 1 302 5 view .LVU26
 209              	@ 302 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c" 1
 210 0012 20BF     		wfe
 211              	@ 0 "" 2
 303:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   }
 304:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 212              		.loc 1 304 1 is_stmt 0 view .LVU27
 213              		.thumb
 214              		.syntax unified
 215 0014 7047     		bx	lr
 216              	.L19:
 295:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   }
 217              		.loc 1 295 5 is_stmt 1 view .LVU28
 218              		.syntax unified
 219              	@ 295 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c" 1
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 10


 220 0016 30BF     		wfi
 221              	@ 0 "" 2
 222              		.thumb
 223              		.syntax unified
 224 0018 7047     		bx	lr
 225              	.L21:
 226 001a 00BF     		.align	2
 227              	.L20:
 228 001c 00ED00E0 		.word	-536810240
 229              		.cfi_endproc
 230              	.LFE135:
 232              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 233              		.align	1
 234              		.global	HAL_PWR_EnterSTOPMode
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu fpv4-sp-d16
 240              	HAL_PWR_EnterSTOPMode:
 241              	.LVL3:
 242              	.LFB136:
 305:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 306:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 307:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Enters STOP mode.
 308:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note  In Stop mode, all I/O pins keep the same state as in Run mode.
 309:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note  When exiting Stop mode by issuing an interrupt or a wakeup event,
 310:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock.
 311:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note  When the voltage regulator operates in low power mode, an additional
 312:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         startup delay is incurred when waking up from Stop mode.
 313:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode, the consumption
 314:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *         is higher although the startup time is reduced.
 315:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @param Regulator Specifies the regulator state in STOP mode.
 316:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 317:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *            @arg PWR_MAINREGULATOR_ON: STOP mode with regulator ON
 318:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *            @arg PWR_LOWPOWERREGULATOR_ON: STOP mode with low power regulator ON
 319:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @param STOPEntry specifies if STOP mode in entered with WFI or WFE instruction.
 320:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 321:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFI:Enter STOP mode with WFI instruction
 322:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *            @arg PWR_STOPENTRY_WFE: Enter STOP mode with WFE instruction
 323:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
 324:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 325:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 326:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
 243              		.loc 1 326 1 view -0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 327:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   uint32_t tmpreg = 0U;
 248              		.loc 1 327 3 view .LVU30
 328:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 329:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Check the parameters */
 330:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 249              		.loc 1 330 3 view .LVU31
 331:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   assert_param(IS_PWR_STOP_ENTRY(STOPEntry));
 250              		.loc 1 331 3 view .LVU32
 332:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 11


 333:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Select the regulator state in STOP mode ---------------------------------*/
 334:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   tmpreg = PWR->CR;
 251              		.loc 1 334 3 view .LVU33
 252              		.loc 1 334 10 is_stmt 0 view .LVU34
 253 0000 0B4A     		ldr	r2, .L26
 254 0002 1368     		ldr	r3, [r2]
 255              	.LVL4:
 335:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   
 336:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Clear PDDS and LPDS bits */
 337:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   tmpreg &= (uint32_t)~(PWR_CR_PDDS | PWR_CR_LPDS);
 256              		.loc 1 337 3 is_stmt 1 view .LVU35
 257              		.loc 1 337 10 is_stmt 0 view .LVU36
 258 0004 23F00303 		bic	r3, r3, #3
 259              	.LVL5:
 338:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 339:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Set LPDS bit according to Regulator value */
 340:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   tmpreg |= Regulator;
 260              		.loc 1 340 3 is_stmt 1 view .LVU37
 261              		.loc 1 340 10 is_stmt 0 view .LVU38
 262 0008 0343     		orrs	r3, r3, r0
 263              	.LVL6:
 341:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 342:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Store the new value */
 343:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   PWR->CR = tmpreg;
 264              		.loc 1 343 3 is_stmt 1 view .LVU39
 265              		.loc 1 343 11 is_stmt 0 view .LVU40
 266 000a 1360     		str	r3, [r2]
 344:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 345:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 346:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 267              		.loc 1 346 3 is_stmt 1 view .LVU41
 268              		.loc 1 346 12 is_stmt 0 view .LVU42
 269 000c 094A     		ldr	r2, .L26+4
 270 000e 1369     		ldr	r3, [r2, #16]
 271              	.LVL7:
 272              		.loc 1 346 12 view .LVU43
 273 0010 43F00403 		orr	r3, r3, #4
 274 0014 1361     		str	r3, [r2, #16]
 275              	.LVL8:
 347:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 348:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Select STOP mode entry --------------------------------------------------*/
 349:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   if(STOPEntry == PWR_STOPENTRY_WFI)
 276              		.loc 1 349 3 is_stmt 1 view .LVU44
 277              		.loc 1 349 5 is_stmt 0 view .LVU45
 278 0016 0129     		cmp	r1, #1
 279 0018 08D0     		beq	.L25
 350:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   {
 351:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 352:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     __WFI();
 353:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   }
 354:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   else
 355:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   {
 356:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     /* Request Wait For Event */
 357:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     __SEV();
 280              		.loc 1 357 5 is_stmt 1 view .LVU46
 281              		.syntax unified
 282              	@ 357 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c" 1
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 12


 283 001a 40BF     		sev
 284              	@ 0 "" 2
 358:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     __WFE();
 285              		.loc 1 358 5 view .LVU47
 286              	@ 358 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c" 1
 287 001c 20BF     		wfe
 288              	@ 0 "" 2
 359:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****     __WFE();
 289              		.loc 1 359 5 view .LVU48
 290              	@ 359 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c" 1
 291 001e 20BF     		wfe
 292              	@ 0 "" 2
 293              		.thumb
 294              		.syntax unified
 295              	.L24:
 360:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   }
 361:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 362:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Reset SLEEPDEEP bit of Cortex System Control Register */
 363:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   SCB->SCR &= (uint32_t)~((uint32_t)SCB_SCR_SLEEPDEEP_Msk);
 296              		.loc 1 363 3 view .LVU49
 297              		.loc 1 363 12 is_stmt 0 view .LVU50
 298 0020 044A     		ldr	r2, .L26+4
 299 0022 1369     		ldr	r3, [r2, #16]
 300 0024 23F00403 		bic	r3, r3, #4
 301 0028 1361     		str	r3, [r2, #16]
 364:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 302              		.loc 1 364 1 view .LVU51
 303 002a 7047     		bx	lr
 304              	.L25:
 352:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   }
 305              		.loc 1 352 5 is_stmt 1 view .LVU52
 306              		.syntax unified
 307              	@ 352 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c" 1
 308 002c 30BF     		wfi
 309              	@ 0 "" 2
 310              		.thumb
 311              		.syntax unified
 312 002e F7E7     		b	.L24
 313              	.L27:
 314              		.align	2
 315              	.L26:
 316 0030 00700040 		.word	1073770496
 317 0034 00ED00E0 		.word	-536810240
 318              		.cfi_endproc
 319              	.LFE136:
 321              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 322              		.align	1
 323              		.global	HAL_PWR_EnterSTANDBYMode
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 327              		.fpu fpv4-sp-d16
 329              	HAL_PWR_EnterSTANDBYMode:
 330              	.LFB137:
 365:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 366:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 367:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Enters STANDBY mode.
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 13


 368:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note  In Standby mode, all I/O pins are high impedance except for:
 369:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *          - Reset pad (still available), 
 370:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *          - RTC alternate function pins if configured for tamper, time-stamp, RTC
 371:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *            Alarm out, or RTC clock calibration out, 
 372:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *          - WKUP pins if enabled.
 373:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
 374:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 375:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 376:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
 331              		.loc 1 376 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 377:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Select STANDBY mode */
 378:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   PWR->CR |= PWR_CR_PDDS;
 336              		.loc 1 378 3 view .LVU54
 337              		.loc 1 378 11 is_stmt 0 view .LVU55
 338 0000 054A     		ldr	r2, .L29
 339 0002 1368     		ldr	r3, [r2]
 340 0004 43F00203 		orr	r3, r3, #2
 341 0008 1360     		str	r3, [r2]
 379:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 380:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 381:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   SCB->SCR |= SCB_SCR_SLEEPDEEP_Msk;
 342              		.loc 1 381 3 is_stmt 1 view .LVU56
 343              		.loc 1 381 12 is_stmt 0 view .LVU57
 344 000a 044A     		ldr	r2, .L29+4
 345 000c 1369     		ldr	r3, [r2, #16]
 346 000e 43F00403 		orr	r3, r3, #4
 347 0012 1361     		str	r3, [r2, #16]
 382:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 383:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* This option is used to ensure that store operations are completed */
 384:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** #if defined ( __CC_ARM)
 385:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   __force_stores();
 386:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** #endif
 387:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 388:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   __WFI();
 348              		.loc 1 388 3 is_stmt 1 view .LVU58
 349              		.syntax unified
 350              	@ 388 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c" 1
 351 0014 30BF     		wfi
 352              	@ 0 "" 2
 389:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 353              		.loc 1 389 1 is_stmt 0 view .LVU59
 354              		.thumb
 355              		.syntax unified
 356 0016 7047     		bx	lr
 357              	.L30:
 358              		.align	2
 359              	.L29:
 360 0018 00700040 		.word	1073770496
 361 001c 00ED00E0 		.word	-536810240
 362              		.cfi_endproc
 363              	.LFE137:
 365              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 366              		.align	1
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 14


 367              		.global	HAL_PWR_EnableSleepOnExit
 368              		.syntax unified
 369              		.thumb
 370              		.thumb_func
 371              		.fpu fpv4-sp-d16
 373              	HAL_PWR_EnableSleepOnExit:
 374              	.LFB138:
 390:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 391:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 392:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Indicates Sleep-On-Exit when returning from Handler mode to Thread mode. 
 393:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 394:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 395:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 396:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *       interruptions handling.         
 397:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
 398:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 399:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 400:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
 375              		.loc 1 400 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 401:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 402:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 380              		.loc 1 402 3 view .LVU61
 381 0000 024A     		ldr	r2, .L32
 382 0002 1369     		ldr	r3, [r2, #16]
 383 0004 43F00203 		orr	r3, r3, #2
 384 0008 1361     		str	r3, [r2, #16]
 403:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 385              		.loc 1 403 1 is_stmt 0 view .LVU62
 386 000a 7047     		bx	lr
 387              	.L33:
 388              		.align	2
 389              	.L32:
 390 000c 00ED00E0 		.word	-536810240
 391              		.cfi_endproc
 392              	.LFE138:
 394              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 395              		.align	1
 396              		.global	HAL_PWR_DisableSleepOnExit
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv4-sp-d16
 402              	HAL_PWR_DisableSleepOnExit:
 403              	.LFB139:
 404:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 405:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 406:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 407:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Disables Sleep-On-Exit feature when returning from Handler mode to Thread mode. 
 408:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note Clears SLEEPONEXIT bit of SCR register. When this bit is set, the processor 
 409:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.          
 410:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
 411:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 412:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 15


 413:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
 404              		.loc 1 413 1 is_stmt 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 0
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 414:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 415:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 409              		.loc 1 415 3 view .LVU64
 410 0000 024A     		ldr	r2, .L35
 411 0002 1369     		ldr	r3, [r2, #16]
 412 0004 23F00203 		bic	r3, r3, #2
 413 0008 1361     		str	r3, [r2, #16]
 416:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 414              		.loc 1 416 1 is_stmt 0 view .LVU65
 415 000a 7047     		bx	lr
 416              	.L36:
 417              		.align	2
 418              	.L35:
 419 000c 00ED00E0 		.word	-536810240
 420              		.cfi_endproc
 421              	.LFE139:
 423              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 424              		.align	1
 425              		.global	HAL_PWR_EnableSEVOnPend
 426              		.syntax unified
 427              		.thumb
 428              		.thumb_func
 429              		.fpu fpv4-sp-d16
 431              	HAL_PWR_EnableSEVOnPend:
 432              	.LFB140:
 417:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 418:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 419:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 420:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 421:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Enables CORTEX M4 SEVONPEND bit. 
 422:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note Sets SEVONPEND bit of SCR register. When this bit is set, this causes 
 423:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 424:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
 425:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 426:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 427:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
 433              		.loc 1 427 1 is_stmt 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437              		@ link register save eliminated.
 428:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 429:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 438              		.loc 1 429 3 view .LVU67
 439 0000 024A     		ldr	r2, .L38
 440 0002 1369     		ldr	r3, [r2, #16]
 441 0004 43F01003 		orr	r3, r3, #16
 442 0008 1361     		str	r3, [r2, #16]
 430:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 443              		.loc 1 430 1 is_stmt 0 view .LVU68
 444 000a 7047     		bx	lr
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 16


 445              	.L39:
 446              		.align	2
 447              	.L38:
 448 000c 00ED00E0 		.word	-536810240
 449              		.cfi_endproc
 450              	.LFE140:
 452              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 453              		.align	1
 454              		.global	HAL_PWR_DisableSEVOnPend
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 458              		.fpu fpv4-sp-d16
 460              	HAL_PWR_DisableSEVOnPend:
 461              	.LFB141:
 431:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 432:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** 
 433:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** /**
 434:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @brief Disables CORTEX M4 SEVONPEND bit. 
 435:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @note Clears SEVONPEND bit of SCR register. When this bit is set, this causes 
 436:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.         
 437:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   * @retval None
 438:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   */
 439:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 440:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** {
 462              		.loc 1 440 1 is_stmt 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 466              		@ link register save eliminated.
 441:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 442:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 467              		.loc 1 442 3 view .LVU70
 468 0000 024A     		ldr	r2, .L41
 469 0002 1369     		ldr	r3, [r2, #16]
 470 0004 23F01003 		bic	r3, r3, #16
 471 0008 1361     		str	r3, [r2, #16]
 443:STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c **** }
 472              		.loc 1 443 1 is_stmt 0 view .LVU71
 473 000a 7047     		bx	lr
 474              	.L42:
 475              		.align	2
 476              	.L41:
 477 000c 00ED00E0 		.word	-536810240
 478              		.cfi_endproc
 479              	.LFE141:
 481              		.text
 482              	.Letext0:
 483              		.file 2 "/Users/brunoflores/Downloads/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/mac
 484              		.file 3 "/Users/brunoflores/Downloads/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys
 485              		.file 4 "STM32Cube_FW_F3_V1.11.1/Drivers/CMSIS/Include/core_cm4.h"
 486              		.file 5 "STM32Cube_FW_F3_V1.11.1/Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 487              		.file 6 "STM32Cube_FW_F3_V1.11.1/Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 488              		.file 7 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_pwr.c
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:18     .text.HAL_PWR_DeInit:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:26     .text.HAL_PWR_DeInit:0000000000000000 HAL_PWR_DeInit
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:48     .text.HAL_PWR_DeInit:0000000000000014 $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:53     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:60     .text.HAL_PWR_EnableBkUpAccess:0000000000000000 HAL_PWR_EnableBkUpAccess
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:77     .text.HAL_PWR_EnableBkUpAccess:000000000000000c $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:82     .text.HAL_PWR_DisableBkUpAccess:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:89     .text.HAL_PWR_DisableBkUpAccess:0000000000000000 HAL_PWR_DisableBkUpAccess
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:106    .text.HAL_PWR_DisableBkUpAccess:000000000000000c $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:111    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:118    .text.HAL_PWR_EnableWakeUpPin:0000000000000000 HAL_PWR_EnableWakeUpPin
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:137    .text.HAL_PWR_EnableWakeUpPin:000000000000000c $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:142    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:149    .text.HAL_PWR_DisableWakeUpPin:0000000000000000 HAL_PWR_DisableWakeUpPin
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:168    .text.HAL_PWR_DisableWakeUpPin:000000000000000c $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:173    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:180    .text.HAL_PWR_EnterSLEEPMode:0000000000000000 HAL_PWR_EnterSLEEPMode
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:228    .text.HAL_PWR_EnterSLEEPMode:000000000000001c $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:233    .text.HAL_PWR_EnterSTOPMode:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:240    .text.HAL_PWR_EnterSTOPMode:0000000000000000 HAL_PWR_EnterSTOPMode
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:316    .text.HAL_PWR_EnterSTOPMode:0000000000000030 $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:322    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:329    .text.HAL_PWR_EnterSTANDBYMode:0000000000000000 HAL_PWR_EnterSTANDBYMode
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:360    .text.HAL_PWR_EnterSTANDBYMode:0000000000000018 $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:366    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:373    .text.HAL_PWR_EnableSleepOnExit:0000000000000000 HAL_PWR_EnableSleepOnExit
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:390    .text.HAL_PWR_EnableSleepOnExit:000000000000000c $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:395    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:402    .text.HAL_PWR_DisableSleepOnExit:0000000000000000 HAL_PWR_DisableSleepOnExit
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:419    .text.HAL_PWR_DisableSleepOnExit:000000000000000c $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:424    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:431    .text.HAL_PWR_EnableSEVOnPend:0000000000000000 HAL_PWR_EnableSEVOnPend
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:448    .text.HAL_PWR_EnableSEVOnPend:000000000000000c $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:453    .text.HAL_PWR_DisableSEVOnPend:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:460    .text.HAL_PWR_DisableSEVOnPend:0000000000000000 HAL_PWR_DisableSEVOnPend
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cckRWuIF.s:477    .text.HAL_PWR_DisableSEVOnPend:000000000000000c $d

NO UNDEFINED SYMBOLS
