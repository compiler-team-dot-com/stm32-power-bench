ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB132:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * @file    PWR/PWR_CurrentConsumption/Src/main.c
   4:Src/main.c    ****   * @author  MCD Application Team
   5:Src/main.c    ****   * @brief   This sample code shows how to use STM32F3xx PWR HAL API to enter
   6:Src/main.c    ****   *          and exit the sleep/stop/standby modes, to measure power consumption 
   7:Src/main.c    ****   *          in these different low power modes.  
   8:Src/main.c    ****   ******************************************************************************
   9:Src/main.c    ****   * @attention
  10:Src/main.c    ****   *
  11:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  12:Src/main.c    ****   * All rights reserved.</center></h2>
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  15:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  16:Src/main.c    ****   * License. You may obtain a copy of the License at:
  17:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  18:Src/main.c    ****   *
  19:Src/main.c    ****   ******************************************************************************
  20:Src/main.c    ****   */
  21:Src/main.c    **** 
  22:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  23:Src/main.c    **** #include "main.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /** @addtogroup STM32F3xx_HAL_Examples
  26:Src/main.c    ****   * @{
  27:Src/main.c    ****   */
  28:Src/main.c    **** 
  29:Src/main.c    **** /** @addtogroup PWR_CurrentConsumption
  30:Src/main.c    ****   * @{
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 2


  31:Src/main.c    ****   */
  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  36:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  37:Src/main.c    **** __IO uint32_t UserButtonStatus = 0;  /* set to 1 after User Button interrupt  */
  38:Src/main.c    **** __IO uint32_t uwWakeUpIntFlag  = 0;  /* set to 1 after RTC alarm interrupt    */
  39:Src/main.c    **** __IO uint32_t uwStandByOutFlag = 0;  /* set to 1 after exit from standby mode */
  40:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  41:Src/main.c    **** static void SystemClock_Config(void);
  42:Src/main.c    **** /* Private functions ---------------------------------------------------------*/
  43:Src/main.c    **** 
  44:Src/main.c    **** /**
  45:Src/main.c    ****   * @brief  Main program
  46:Src/main.c    ****   * @param  None
  47:Src/main.c    ****   * @retval None
  48:Src/main.c    ****   */
  49:Src/main.c    **** int main(void)
  50:Src/main.c    **** {
  51:Src/main.c    ****   /* STM32F3xx HAL library initialization:
  52:Src/main.c    ****        - Configure the Flash prefetch
  53:Src/main.c    ****        - Systick timer is configured by default as source of time base, but user 
  54:Src/main.c    ****          can eventually implement his proper time base source (a general purpose 
  55:Src/main.c    ****          timer for example or other time source), keeping in mind that Time base 
  56:Src/main.c    ****          duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
  57:Src/main.c    ****          handled in milliseconds basis.
  58:Src/main.c    ****        - Set NVIC Group Priority to 4
  59:Src/main.c    ****        - Low Level Initialization
  60:Src/main.c    ****      */
  61:Src/main.c    ****   HAL_Init();
  62:Src/main.c    **** 
  63:Src/main.c    ****   /* Configure LED */
  64:Src/main.c    ****   BSP_LED_Init(LED3); 
  65:Src/main.c    ****   BSP_LED_Init(LED4);
  66:Src/main.c    ****   BSP_LED_Init(LED5);
  67:Src/main.c    **** 
  68:Src/main.c    ****   /* Configure the system clock to 72 MHz */
  69:Src/main.c    ****   SystemClock_Config();
  70:Src/main.c    **** 
  71:Src/main.c    ****   /* Enable Power Clock */
  72:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* Check and handle if the system was resumed from StandBy mode */
  75:Src/main.c    ****   if (__HAL_PWR_GET_FLAG(PWR_FLAG_SB) != RESET)
  76:Src/main.c    ****   {
  77:Src/main.c    ****     __HAL_PWR_CLEAR_FLAG(PWR_FLAG_SB);
  78:Src/main.c    **** 
  79:Src/main.c    ****     /* Turn on the ORANGE LED */
  80:Src/main.c    ****     BSP_LED_On(LED5);
  81:Src/main.c    **** 
  82:Src/main.c    ****     uwStandByOutFlag = 1;
  83:Src/main.c    **** 
  84:Src/main.c    ****     /* Configure User push-button */
  85:Src/main.c    ****     BSP_PB_Init(BUTTON_USER, BUTTON_MODE_GPIO);
  86:Src/main.c    **** 
  87:Src/main.c    ****     /* Wait that user release the User push-button */
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 3


  88:Src/main.c    ****     while(BSP_PB_GetState(BUTTON_USER) == SET){}
  89:Src/main.c    ****   }
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* Infinite loop */
  92:Src/main.c    ****   while(1)
  93:Src/main.c    ****   {
  94:Src/main.c    ****     /* Configure User push-button as external interrupt generator */
  95:Src/main.c    ****     BSP_PB_Init(BUTTON_USER, BUTTON_MODE_EXTI);
  96:Src/main.c    ****     UserButtonStatus = 0;
  97:Src/main.c    ****     
  98:Src/main.c    ****     /* Wait until User push-button is pressed to enter the Low Power mode.
  99:Src/main.c    ****        In the meantime, LED3 is blinks */
 100:Src/main.c    ****     while (UserButtonStatus == 0)
 101:Src/main.c    ****     {
 102:Src/main.c    ****       /* Toggle LED3 */
 103:Src/main.c    ****       BSP_LED_Toggle(LED3); 
 104:Src/main.c    ****       HAL_Delay(100);
 105:Src/main.c    **** 
 106:Src/main.c    ****       /* If exiting from stand-by mode, */
 107:Src/main.c    ****       /*   keep LED5 ON for about 5 sec. */
 108:Src/main.c    ****       if (uwStandByOutFlag > 0)
 109:Src/main.c    ****       {
 110:Src/main.c    ****         uwStandByOutFlag++;
 111:Src/main.c    ****         if (uwStandByOutFlag == 50)
 112:Src/main.c    ****         {
 113:Src/main.c    ****           BSP_LED_Off(LED5);
 114:Src/main.c    ****           uwStandByOutFlag = 0; 
 115:Src/main.c    ****         }
 116:Src/main.c    ****       }
 117:Src/main.c    ****       
 118:Src/main.c    ****       /* If exiting from stop mode thru RTC alarm
 119:Src/main.c    ****         interrupt, keep LED6 ON for about 5 sec. */      
 120:Src/main.c    ****       if (uwWakeUpIntFlag > 0)
 121:Src/main.c    ****       {
 122:Src/main.c    ****         uwWakeUpIntFlag++;
 123:Src/main.c    ****         if (uwWakeUpIntFlag == 50)
 124:Src/main.c    ****         {
 125:Src/main.c    ****           BSP_LED_Off(LED6);
 126:Src/main.c    ****           uwWakeUpIntFlag = 0; 
 127:Src/main.c    ****         }
 128:Src/main.c    ****       }
 129:Src/main.c    ****     }
 130:Src/main.c    **** 
 131:Src/main.c    ****     /* Make sure LED3 is turned off to 
 132:Src/main.c    ****        reduce low power mode consumption */
 133:Src/main.c    ****     BSP_LED_Off(LED3);
 134:Src/main.c    **** 
 135:Src/main.c    **** #if defined (SLEEP_MODE)
 136:Src/main.c    ****     /* Sleep Mode Entry
 137:Src/main.c    ****         - System Running at PLL (72 MHz)
 138:Src/main.c    ****         - Flash 2 wait state
 139:Src/main.c    ****         - Instruction and Data caches ON
 140:Src/main.c    ****         - Prefetch ON
 141:Src/main.c    ****         - Code running from Internal FLASH
 142:Src/main.c    ****         - All peripherals disabled.
 143:Src/main.c    ****         - Wakeup using EXTI Line (User push-button PA.00)
 144:Src/main.c    ****     */
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 4


 145:Src/main.c    ****     SleepMode_Measure();
 146:Src/main.c    **** #elif defined (STOP_RTC_MODE)
 147:Src/main.c    ****     /* STOP Mode Entry 
 148:Src/main.c    ****     - RTC Clocked by LSI or LSE
 149:Src/main.c    ****     - Regulator in LP mode
 150:Src/main.c    ****     - HSI, HSE OFF and LSI OFF if not used as RTC Clock source  
 151:Src/main.c    ****     - No IWDG
 152:Src/main.c    ****     - Automatic Wakeup using RTC clocked by LSI (after ~20s)
 153:Src/main.c    ****     - Wakeup using EXTI Line (User push-button PA.00)
 154:Src/main.c    ****     */
 155:Src/main.c    ****     StopRTCMode_Measure();
 156:Src/main.c    **** #elif defined (STANDBY_MODE)
 157:Src/main.c    ****     /* STANDBY Mode Entry
 158:Src/main.c    ****         - RTC OFF
 159:Src/main.c    ****         - IWDG and LSI OFF
 160:Src/main.c    ****         - Wakeup using WakeUp Pin (PWR_WAKEUP_PIN1 PA.00)
 161:Src/main.c    ****     */
 162:Src/main.c    ****     StandbyMode_Measure();
 163:Src/main.c    **** #elif defined (STANDBY_RTC_MODE)
 164:Src/main.c    ****     /* STANDBY Mode with RTC on LSE/LSI Entry
 165:Src/main.c    ****         - RTC Clocked by LSE or LSI
 166:Src/main.c    ****         - IWDG OFF and LSI OFF if not used as RTC Clock source
 167:Src/main.c    ****         - Automatic Wakeup using RTC clocked by LSE/LSI (after ~20s)
 168:Src/main.c    ****     */
 169:Src/main.c    ****     StandbyRTCMode_Measure();
 170:Src/main.c    **** #endif
 171:Src/main.c    ****   }
 172:Src/main.c    **** }
 173:Src/main.c    **** 
 174:Src/main.c    **** /**
 175:Src/main.c    ****   * @brief  System Clock Configuration
 176:Src/main.c    ****   *         The system Clock is configured as follow : 
 177:Src/main.c    ****   *            System Clock source            = PLL (HSE)
 178:Src/main.c    ****   *            SYSCLK(Hz)                     = 72000000
 179:Src/main.c    ****   *            HCLK(Hz)                       = 72000000
 180:Src/main.c    ****   *            AHB Prescaler                  = 1
 181:Src/main.c    ****   *            APB1 Prescaler                 = 2
 182:Src/main.c    ****   *            APB2 Prescaler                 = 1
 183:Src/main.c    ****   *            HSE Frequency(Hz)              = 8000000
 184:Src/main.c    ****   *            HSE PREDIV                     = 1
 185:Src/main.c    ****   *            PLLMUL                         = RCC_PLL_MUL9 (9)
 186:Src/main.c    ****   *            Flash Latency(WS)              = 2
 187:Src/main.c    ****   * @param  None
 188:Src/main.c    ****   * @retval None
 189:Src/main.c    ****   */
 190:Src/main.c    **** static void SystemClock_Config(void)
 191:Src/main.c    **** {
 192:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 193:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 194:Src/main.c    ****   
 195:Src/main.c    ****   /* Enable HSE Oscillator and activate PLL with HSE as source */
 196:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 197:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 198:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 5


 202:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct)!= HAL_OK)
 203:Src/main.c    ****   {
 204:Src/main.c    ****     Error_Handler();
 205:Src/main.c    ****   }
 206:Src/main.c    **** 
 207:Src/main.c    ****   /* Select PLL as system clock source and configure the HCLK, PCLK1 and PCLK2 
 208:Src/main.c    ****      clocks dividers */
 209:Src/main.c    ****   RCC_ClkInitStruct.ClockType = (RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 210:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 211:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 212:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;  
 213:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 214:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2)!= HAL_OK)
 215:Src/main.c    ****   {
 216:Src/main.c    ****     Error_Handler();
 217:Src/main.c    ****   }
 218:Src/main.c    **** }
 219:Src/main.c    **** /**
 220:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 221:Src/main.c    ****   * @param  None
 222:Src/main.c    ****   * @retval None
 223:Src/main.c    ****   */
 224:Src/main.c    **** void Error_Handler(void)
 225:Src/main.c    **** {
  29              		.loc 1 225 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 08B5     		push	{r3, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 3, -8
  38              		.cfi_offset 14, -4
 226:Src/main.c    ****   /* Error if LED4 is ON */
 227:Src/main.c    ****   BSP_LED_Init(LED4);
  39              		.loc 1 227 3 view .LVU1
  40 0002 0120     		movs	r0, #1
  41 0004 FFF7FEFF 		bl	BSP_LED_Init
  42              	.LVL0:
 228:Src/main.c    ****   BSP_LED_On(LED4);
  43              		.loc 1 228 3 view .LVU2
  44 0008 0120     		movs	r0, #1
  45 000a FFF7FEFF 		bl	BSP_LED_On
  46              	.LVL1:
  47              	.L2:
 229:Src/main.c    ****   while (1)
  48              		.loc 1 229 3 discriminator 1 view .LVU3
 230:Src/main.c    ****   {
 231:Src/main.c    ****   }
  49              		.loc 1 231 3 discriminator 1 view .LVU4
 229:Src/main.c    ****   while (1)
  50              		.loc 1 229 9 discriminator 1 view .LVU5
  51 000e FEE7     		b	.L2
  52              		.cfi_endproc
  53              	.LFE132:
  55              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 6


  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv4-sp-d16
  62              	SystemClock_Config:
  63              	.LFB131:
 191:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  64              		.loc 1 191 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 64
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68 0000 00B5     		push	{lr}
  69              	.LCFI1:
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 14, -4
  72 0002 91B0     		sub	sp, sp, #68
  73              	.LCFI2:
  74              		.cfi_def_cfa_offset 72
 192:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  75              		.loc 1 192 3 view .LVU7
 193:Src/main.c    ****   
  76              		.loc 1 193 3 view .LVU8
 196:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  77              		.loc 1 196 3 view .LVU9
 196:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  78              		.loc 1 196 36 is_stmt 0 view .LVU10
  79 0004 0123     		movs	r3, #1
  80 0006 0193     		str	r3, [sp, #4]
 197:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  81              		.loc 1 197 3 is_stmt 1 view .LVU11
 197:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  82              		.loc 1 197 30 is_stmt 0 view .LVU12
  83 0008 4FF48033 		mov	r3, #65536
  84 000c 0293     		str	r3, [sp, #8]
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  85              		.loc 1 198 3 is_stmt 1 view .LVU13
 198:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  86              		.loc 1 198 36 is_stmt 0 view .LVU14
  87 000e 0022     		movs	r2, #0
  88 0010 0392     		str	r2, [sp, #12]
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  89              		.loc 1 199 3 is_stmt 1 view .LVU15
 199:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  90              		.loc 1 199 34 is_stmt 0 view .LVU16
  91 0012 0222     		movs	r2, #2
  92 0014 0892     		str	r2, [sp, #32]
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  93              		.loc 1 200 3 is_stmt 1 view .LVU17
 200:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  94              		.loc 1 200 35 is_stmt 0 view .LVU18
  95 0016 0993     		str	r3, [sp, #36]
 201:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct)!= HAL_OK)
  96              		.loc 1 201 3 is_stmt 1 view .LVU19
 201:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct)!= HAL_OK)
  97              		.loc 1 201 32 is_stmt 0 view .LVU20
  98 0018 4FF4E013 		mov	r3, #1835008
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 7


  99 001c 0A93     		str	r3, [sp, #40]
 202:Src/main.c    ****   {
 100              		.loc 1 202 3 is_stmt 1 view .LVU21
 202:Src/main.c    ****   {
 101              		.loc 1 202 7 is_stmt 0 view .LVU22
 102 001e 01A8     		add	r0, sp, #4
 103 0020 FFF7FEFF 		bl	HAL_RCC_OscConfig
 104              	.LVL2:
 202:Src/main.c    ****   {
 105              		.loc 1 202 6 view .LVU23
 106 0024 80B9     		cbnz	r0, .L8
 209:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 107              		.loc 1 209 3 is_stmt 1 view .LVU24
 209:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 108              		.loc 1 209 31 is_stmt 0 view .LVU25
 109 0026 0F23     		movs	r3, #15
 110 0028 0B93     		str	r3, [sp, #44]
 210:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 111              		.loc 1 210 3 is_stmt 1 view .LVU26
 210:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 112              		.loc 1 210 34 is_stmt 0 view .LVU27
 113 002a 0221     		movs	r1, #2
 114 002c 0C91     		str	r1, [sp, #48]
 211:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;  
 115              		.loc 1 211 3 is_stmt 1 view .LVU28
 211:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;  
 116              		.loc 1 211 35 is_stmt 0 view .LVU29
 117 002e 0023     		movs	r3, #0
 118 0030 0D93     		str	r3, [sp, #52]
 212:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 119              		.loc 1 212 3 is_stmt 1 view .LVU30
 212:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 120              		.loc 1 212 36 is_stmt 0 view .LVU31
 121 0032 4FF48062 		mov	r2, #1024
 122 0036 0E92     		str	r2, [sp, #56]
 213:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2)!= HAL_OK)
 123              		.loc 1 213 3 is_stmt 1 view .LVU32
 213:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2)!= HAL_OK)
 124              		.loc 1 213 36 is_stmt 0 view .LVU33
 125 0038 0F93     		str	r3, [sp, #60]
 214:Src/main.c    ****   {
 126              		.loc 1 214 3 is_stmt 1 view .LVU34
 214:Src/main.c    ****   {
 127              		.loc 1 214 7 is_stmt 0 view .LVU35
 128 003a 0BA8     		add	r0, sp, #44
 129 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 130              	.LVL3:
 214:Src/main.c    ****   {
 131              		.loc 1 214 6 view .LVU36
 132 0040 20B9     		cbnz	r0, .L9
 218:Src/main.c    **** /**
 133              		.loc 1 218 1 view .LVU37
 134 0042 11B0     		add	sp, sp, #68
 135              	.LCFI3:
 136              		.cfi_remember_state
 137              		.cfi_def_cfa_offset 4
 138              		@ sp needed
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 8


 139 0044 5DF804FB 		ldr	pc, [sp], #4
 140              	.L8:
 141              	.LCFI4:
 142              		.cfi_restore_state
 204:Src/main.c    ****   }
 143              		.loc 1 204 5 is_stmt 1 view .LVU38
 144 0048 FFF7FEFF 		bl	Error_Handler
 145              	.LVL4:
 146              	.L9:
 216:Src/main.c    ****   }
 147              		.loc 1 216 5 view .LVU39
 148 004c FFF7FEFF 		bl	Error_Handler
 149              	.LVL5:
 150              		.cfi_endproc
 151              	.LFE131:
 153              		.section	.text.main,"ax",%progbits
 154              		.align	1
 155              		.global	main
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu fpv4-sp-d16
 161              	main:
 162              	.LFB130:
  50:Src/main.c    ****   /* STM32F3xx HAL library initialization:
 163              		.loc 1 50 1 view -0
 164              		.cfi_startproc
 165              		@ Volatile: function does not return.
 166              		@ args = 0, pretend = 0, frame = 8
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 00B5     		push	{lr}
 169              	.LCFI5:
 170              		.cfi_def_cfa_offset 4
 171              		.cfi_offset 14, -4
 172 0002 83B0     		sub	sp, sp, #12
 173              	.LCFI6:
 174              		.cfi_def_cfa_offset 16
  61:Src/main.c    **** 
 175              		.loc 1 61 3 view .LVU41
 176 0004 FFF7FEFF 		bl	HAL_Init
 177              	.LVL6:
  64:Src/main.c    ****   BSP_LED_Init(LED4);
 178              		.loc 1 64 3 view .LVU42
 179 0008 0020     		movs	r0, #0
 180 000a FFF7FEFF 		bl	BSP_LED_Init
 181              	.LVL7:
  65:Src/main.c    ****   BSP_LED_Init(LED5);
 182              		.loc 1 65 3 view .LVU43
 183 000e 0120     		movs	r0, #1
 184 0010 FFF7FEFF 		bl	BSP_LED_Init
 185              	.LVL8:
  66:Src/main.c    **** 
 186              		.loc 1 66 3 view .LVU44
 187 0014 0220     		movs	r0, #2
 188 0016 FFF7FEFF 		bl	BSP_LED_Init
 189              	.LVL9:
  69:Src/main.c    **** 
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 9


 190              		.loc 1 69 3 view .LVU45
 191 001a FFF7FEFF 		bl	SystemClock_Config
 192              	.LVL10:
  72:Src/main.c    **** 
 193              		.loc 1 72 3 view .LVU46
 194              	.LBB2:
  72:Src/main.c    **** 
 195              		.loc 1 72 3 view .LVU47
  72:Src/main.c    **** 
 196              		.loc 1 72 3 view .LVU48
 197 001e 2E4B     		ldr	r3, .L22
 198 0020 DA69     		ldr	r2, [r3, #28]
 199 0022 42F08052 		orr	r2, r2, #268435456
 200 0026 DA61     		str	r2, [r3, #28]
  72:Src/main.c    **** 
 201              		.loc 1 72 3 view .LVU49
 202 0028 DB69     		ldr	r3, [r3, #28]
 203 002a 03F08053 		and	r3, r3, #268435456
 204 002e 0193     		str	r3, [sp, #4]
  72:Src/main.c    **** 
 205              		.loc 1 72 3 view .LVU50
 206 0030 019B     		ldr	r3, [sp, #4]
 207              	.LBE2:
  72:Src/main.c    **** 
 208              		.loc 1 72 3 view .LVU51
  75:Src/main.c    ****   {
 209              		.loc 1 75 3 view .LVU52
  75:Src/main.c    ****   {
 210              		.loc 1 75 7 is_stmt 0 view .LVU53
 211 0032 2A4B     		ldr	r3, .L22+4
 212 0034 5B68     		ldr	r3, [r3, #4]
  75:Src/main.c    ****   {
 213              		.loc 1 75 6 view .LVU54
 214 0036 13F0020F 		tst	r3, #2
 215 003a 30D0     		beq	.L18
  77:Src/main.c    **** 
 216              		.loc 1 77 5 is_stmt 1 view .LVU55
 217 003c 274A     		ldr	r2, .L22+4
 218 003e 1368     		ldr	r3, [r2]
 219 0040 43F00803 		orr	r3, r3, #8
 220 0044 1360     		str	r3, [r2]
  80:Src/main.c    **** 
 221              		.loc 1 80 5 view .LVU56
 222 0046 0220     		movs	r0, #2
 223 0048 FFF7FEFF 		bl	BSP_LED_On
 224              	.LVL11:
  82:Src/main.c    **** 
 225              		.loc 1 82 5 view .LVU57
  82:Src/main.c    **** 
 226              		.loc 1 82 22 is_stmt 0 view .LVU58
 227 004c 244B     		ldr	r3, .L22+8
 228 004e 0122     		movs	r2, #1
 229 0050 1A60     		str	r2, [r3]
  85:Src/main.c    **** 
 230              		.loc 1 85 5 is_stmt 1 view .LVU59
 231 0052 0021     		movs	r1, #0
 232 0054 0846     		mov	r0, r1
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 10


 233 0056 FFF7FEFF 		bl	BSP_PB_Init
 234              	.LVL12:
  88:Src/main.c    ****   }
 235              		.loc 1 88 5 view .LVU60
 236              	.L12:
  88:Src/main.c    ****   }
 237              		.loc 1 88 48 discriminator 1 view .LVU61
  88:Src/main.c    ****   }
 238              		.loc 1 88 10 discriminator 1 view .LVU62
  88:Src/main.c    ****   }
 239              		.loc 1 88 11 is_stmt 0 discriminator 1 view .LVU63
 240 005a 0020     		movs	r0, #0
 241 005c FFF7FEFF 		bl	BSP_PB_GetState
 242              	.LVL13:
  88:Src/main.c    ****   }
 243              		.loc 1 88 10 discriminator 1 view .LVU64
 244 0060 0128     		cmp	r0, #1
 245 0062 FAD0     		beq	.L12
 246 0064 1BE0     		b	.L18
 247              	.L17:
 103:Src/main.c    ****       HAL_Delay(100);
 248              		.loc 1 103 7 is_stmt 1 view .LVU65
 249 0066 0020     		movs	r0, #0
 250 0068 FFF7FEFF 		bl	BSP_LED_Toggle
 251              	.LVL14:
 104:Src/main.c    **** 
 252              		.loc 1 104 7 view .LVU66
 253 006c 6420     		movs	r0, #100
 254 006e FFF7FEFF 		bl	HAL_Delay
 255              	.LVL15:
 108:Src/main.c    ****       {
 256              		.loc 1 108 7 view .LVU67
 108:Src/main.c    ****       {
 257              		.loc 1 108 28 is_stmt 0 view .LVU68
 258 0072 1B4B     		ldr	r3, .L22+8
 259 0074 1B68     		ldr	r3, [r3]
 108:Src/main.c    ****       {
 260              		.loc 1 108 10 view .LVU69
 261 0076 33B1     		cbz	r3, .L14
 110:Src/main.c    ****         if (uwStandByOutFlag == 50)
 262              		.loc 1 110 9 is_stmt 1 view .LVU70
 110:Src/main.c    ****         if (uwStandByOutFlag == 50)
 263              		.loc 1 110 25 is_stmt 0 view .LVU71
 264 0078 194B     		ldr	r3, .L22+8
 265 007a 1A68     		ldr	r2, [r3]
 266 007c 0132     		adds	r2, r2, #1
 267 007e 1A60     		str	r2, [r3]
 111:Src/main.c    ****         {
 268              		.loc 1 111 9 is_stmt 1 view .LVU72
 111:Src/main.c    ****         {
 269              		.loc 1 111 30 is_stmt 0 view .LVU73
 270 0080 1B68     		ldr	r3, [r3]
 111:Src/main.c    ****         {
 271              		.loc 1 111 12 view .LVU74
 272 0082 322B     		cmp	r3, #50
 273 0084 13D0     		beq	.L20
 274              	.L14:
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 11


 120:Src/main.c    ****       {
 275              		.loc 1 120 7 is_stmt 1 view .LVU75
 120:Src/main.c    ****       {
 276              		.loc 1 120 27 is_stmt 0 view .LVU76
 277 0086 174B     		ldr	r3, .L22+12
 278 0088 1B68     		ldr	r3, [r3]
 120:Src/main.c    ****       {
 279              		.loc 1 120 10 view .LVU77
 280 008a BBB9     		cbnz	r3, .L21
 281              	.L15:
 100:Src/main.c    ****     {
 282              		.loc 1 100 11 is_stmt 1 view .LVU78
 100:Src/main.c    ****     {
 283              		.loc 1 100 29 is_stmt 0 view .LVU79
 284 008c 164B     		ldr	r3, .L22+16
 285 008e 1B68     		ldr	r3, [r3]
 100:Src/main.c    ****     {
 286              		.loc 1 100 11 view .LVU80
 287 0090 002B     		cmp	r3, #0
 288 0092 E8D0     		beq	.L17
 133:Src/main.c    **** 
 289              		.loc 1 133 5 is_stmt 1 view .LVU81
 290 0094 0020     		movs	r0, #0
 291 0096 FFF7FEFF 		bl	BSP_LED_Off
 292              	.LVL16:
 155:Src/main.c    **** #elif defined (STANDBY_MODE)
 293              		.loc 1 155 5 view .LVU82
 294 009a FFF7FEFF 		bl	StopRTCMode_Measure
 295              	.LVL17:
  92:Src/main.c    ****   {
 296              		.loc 1 92 8 view .LVU83
 297              	.L18:
  92:Src/main.c    ****   {
 298              		.loc 1 92 3 view .LVU84
  95:Src/main.c    ****     UserButtonStatus = 0;
 299              		.loc 1 95 5 view .LVU85
 300 009e 0121     		movs	r1, #1
 301 00a0 0020     		movs	r0, #0
 302 00a2 FFF7FEFF 		bl	BSP_PB_Init
 303              	.LVL18:
  96:Src/main.c    ****     
 304              		.loc 1 96 5 view .LVU86
  96:Src/main.c    ****     
 305              		.loc 1 96 22 is_stmt 0 view .LVU87
 306 00a6 104B     		ldr	r3, .L22+16
 307 00a8 0022     		movs	r2, #0
 308 00aa 1A60     		str	r2, [r3]
 100:Src/main.c    ****     {
 309              		.loc 1 100 5 is_stmt 1 view .LVU88
 100:Src/main.c    ****     {
 310              		.loc 1 100 11 is_stmt 0 view .LVU89
 311 00ac EEE7     		b	.L15
 312              	.L20:
 113:Src/main.c    ****           uwStandByOutFlag = 0; 
 313              		.loc 1 113 11 is_stmt 1 view .LVU90
 314 00ae 0220     		movs	r0, #2
 315 00b0 FFF7FEFF 		bl	BSP_LED_Off
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 12


 316              	.LVL19:
 114:Src/main.c    ****         }
 317              		.loc 1 114 11 view .LVU91
 114:Src/main.c    ****         }
 318              		.loc 1 114 28 is_stmt 0 view .LVU92
 319 00b4 0A4B     		ldr	r3, .L22+8
 320 00b6 0022     		movs	r2, #0
 321 00b8 1A60     		str	r2, [r3]
 322 00ba E4E7     		b	.L14
 323              	.L21:
 122:Src/main.c    ****         if (uwWakeUpIntFlag == 50)
 324              		.loc 1 122 9 is_stmt 1 view .LVU93
 122:Src/main.c    ****         if (uwWakeUpIntFlag == 50)
 325              		.loc 1 122 24 is_stmt 0 view .LVU94
 326 00bc 094B     		ldr	r3, .L22+12
 327 00be 1A68     		ldr	r2, [r3]
 328 00c0 0132     		adds	r2, r2, #1
 329 00c2 1A60     		str	r2, [r3]
 123:Src/main.c    ****         {
 330              		.loc 1 123 9 is_stmt 1 view .LVU95
 123:Src/main.c    ****         {
 331              		.loc 1 123 29 is_stmt 0 view .LVU96
 332 00c4 1B68     		ldr	r3, [r3]
 123:Src/main.c    ****         {
 333              		.loc 1 123 12 view .LVU97
 334 00c6 322B     		cmp	r3, #50
 335 00c8 E0D1     		bne	.L15
 125:Src/main.c    ****           uwWakeUpIntFlag = 0; 
 336              		.loc 1 125 11 is_stmt 1 view .LVU98
 337 00ca 0320     		movs	r0, #3
 338 00cc FFF7FEFF 		bl	BSP_LED_Off
 339              	.LVL20:
 126:Src/main.c    ****         }
 340              		.loc 1 126 11 view .LVU99
 126:Src/main.c    ****         }
 341              		.loc 1 126 27 is_stmt 0 view .LVU100
 342 00d0 044B     		ldr	r3, .L22+12
 343 00d2 0022     		movs	r2, #0
 344 00d4 1A60     		str	r2, [r3]
 345 00d6 D9E7     		b	.L15
 346              	.L23:
 347              		.align	2
 348              	.L22:
 349 00d8 00100240 		.word	1073876992
 350 00dc 00700040 		.word	1073770496
 351 00e0 00000000 		.word	.LANCHOR0
 352 00e4 00000000 		.word	.LANCHOR2
 353 00e8 00000000 		.word	.LANCHOR1
 354              		.cfi_endproc
 355              	.LFE130:
 357              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 358              		.align	1
 359              		.global	HAL_SYSTICK_Callback
 360              		.syntax unified
 361              		.thumb
 362              		.thumb_func
 363              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 13


 365              	HAL_SYSTICK_Callback:
 366              	.LFB133:
 232:Src/main.c    **** }
 233:Src/main.c    **** 
 234:Src/main.c    **** /**
 235:Src/main.c    ****   * @brief SYSTICK callback
 236:Src/main.c    ****   * @param None
 237:Src/main.c    ****   * @retval None
 238:Src/main.c    ****   */
 239:Src/main.c    **** void HAL_SYSTICK_Callback(void)
 240:Src/main.c    **** {
 367              		.loc 1 240 1 is_stmt 1 view -0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 08B5     		push	{r3, lr}
 372              	.LCFI7:
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 3, -8
 375              		.cfi_offset 14, -4
 241:Src/main.c    ****   HAL_IncTick();
 376              		.loc 1 241 3 view .LVU102
 377 0002 FFF7FEFF 		bl	HAL_IncTick
 378              	.LVL21:
 242:Src/main.c    **** }
 379              		.loc 1 242 1 is_stmt 0 view .LVU103
 380 0006 08BD     		pop	{r3, pc}
 381              		.cfi_endproc
 382              	.LFE133:
 384              		.section	.text.HAL_RTCEx_WakeUpTimerEventCallback,"ax",%progbits
 385              		.align	1
 386              		.global	HAL_RTCEx_WakeUpTimerEventCallback
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu fpv4-sp-d16
 392              	HAL_RTCEx_WakeUpTimerEventCallback:
 393              	.LVL22:
 394              	.LFB134:
 243:Src/main.c    **** 
 244:Src/main.c    **** /**
 245:Src/main.c    ****   * @brief  Wake Up Timer callback
 246:Src/main.c    ****   * @param  hrtc : hrtc handle
 247:Src/main.c    ****   * @retval None
 248:Src/main.c    ****   */
 249:Src/main.c    **** void HAL_RTCEx_WakeUpTimerEventCallback(RTC_HandleTypeDef *hrtc)
 250:Src/main.c    **** {
 395              		.loc 1 250 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		.loc 1 250 1 is_stmt 0 view .LVU105
 400 0000 08B5     		push	{r3, lr}
 401              	.LCFI8:
 402              		.cfi_def_cfa_offset 8
 403              		.cfi_offset 3, -8
 404              		.cfi_offset 14, -4
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 14


 251:Src/main.c    ****   /* NOTE : add the specific code to handle the RTC wake up interrupt */
 252:Src/main.c    **** 
 253:Src/main.c    ****   /* Initialize LED */
 254:Src/main.c    ****   BSP_LED_Init(LED3);
 405              		.loc 1 254 3 is_stmt 1 view .LVU106
 406 0002 0020     		movs	r0, #0
 407              	.LVL23:
 408              		.loc 1 254 3 is_stmt 0 view .LVU107
 409 0004 FFF7FEFF 		bl	BSP_LED_Init
 410              	.LVL24:
 255:Src/main.c    ****   /* On The LED */
 256:Src/main.c    ****   BSP_LED_On(LED3);
 411              		.loc 1 256 3 is_stmt 1 view .LVU108
 412 0008 0020     		movs	r0, #0
 413 000a FFF7FEFF 		bl	BSP_LED_On
 414              	.LVL25:
 257:Src/main.c    **** 
 258:Src/main.c    ****   /* Initialize LED */
 259:Src/main.c    ****   BSP_LED_Init(LED6);
 415              		.loc 1 259 3 view .LVU109
 416 000e 0320     		movs	r0, #3
 417 0010 FFF7FEFF 		bl	BSP_LED_Init
 418              	.LVL26:
 260:Src/main.c    ****   /* On the LED */
 261:Src/main.c    ****   BSP_LED_On(LED6);
 419              		.loc 1 261 3 view .LVU110
 420 0014 0320     		movs	r0, #3
 421 0016 FFF7FEFF 		bl	BSP_LED_On
 422              	.LVL27:
 262:Src/main.c    ****   
 263:Src/main.c    ****   uwWakeUpIntFlag = 1;
 423              		.loc 1 263 3 view .LVU111
 424              		.loc 1 263 19 is_stmt 0 view .LVU112
 425 001a 024B     		ldr	r3, .L28
 426 001c 0122     		movs	r2, #1
 427 001e 1A60     		str	r2, [r3]
 264:Src/main.c    **** }
 428              		.loc 1 264 1 view .LVU113
 429 0020 08BD     		pop	{r3, pc}
 430              	.L29:
 431 0022 00BF     		.align	2
 432              	.L28:
 433 0024 00000000 		.word	.LANCHOR2
 434              		.cfi_endproc
 435              	.LFE134:
 437              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 438              		.align	1
 439              		.global	HAL_GPIO_EXTI_Callback
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 443              		.fpu fpv4-sp-d16
 445              	HAL_GPIO_EXTI_Callback:
 446              	.LVL28:
 447              	.LFB135:
 265:Src/main.c    **** 
 266:Src/main.c    **** /**
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 15


 267:Src/main.c    ****   * @brief EXTI line detection callbacks
 268:Src/main.c    ****   * @param GPIO_Pin: Specifies the pins connected EXTI line
 269:Src/main.c    ****   * @retval None
 270:Src/main.c    ****   */
 271:Src/main.c    **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 272:Src/main.c    **** {
 448              		.loc 1 272 1 is_stmt 1 view -0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 0
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 273:Src/main.c    ****   if (GPIO_Pin == USER_BUTTON_PIN)
 452              		.loc 1 273 3 view .LVU115
 453              		.loc 1 273 6 is_stmt 0 view .LVU116
 454 0000 0128     		cmp	r0, #1
 455 0002 00D0     		beq	.L36
 456 0004 7047     		bx	lr
 457              	.L36:
 272:Src/main.c    ****   if (GPIO_Pin == USER_BUTTON_PIN)
 458              		.loc 1 272 1 view .LVU117
 459 0006 08B5     		push	{r3, lr}
 460              	.LCFI9:
 461              		.cfi_def_cfa_offset 8
 462              		.cfi_offset 3, -8
 463              		.cfi_offset 14, -4
 464              	.LVL29:
 465              	.L32:
 274:Src/main.c    ****   {
 275:Src/main.c    ****   
 276:Src/main.c    ****     /* Wait that user release the User push-button */
 277:Src/main.c    ****     while(BSP_PB_GetState(BUTTON_USER) == GPIO_PIN_SET){}
 466              		.loc 1 277 57 is_stmt 1 discriminator 1 view .LVU118
 467              		.loc 1 277 10 discriminator 1 view .LVU119
 468              		.loc 1 277 11 is_stmt 0 discriminator 1 view .LVU120
 469 0008 0020     		movs	r0, #0
 470 000a FFF7FEFF 		bl	BSP_PB_GetState
 471              	.LVL30:
 472              		.loc 1 277 10 discriminator 1 view .LVU121
 473 000e 0128     		cmp	r0, #1
 474 0010 FAD0     		beq	.L32
 278:Src/main.c    ****     
 279:Src/main.c    ****     /* Configure leds */
 280:Src/main.c    ****     BSP_LED_Init(LED3);
 475              		.loc 1 280 5 is_stmt 1 view .LVU122
 476 0012 0020     		movs	r0, #0
 477 0014 FFF7FEFF 		bl	BSP_LED_Init
 478              	.LVL31:
 281:Src/main.c    ****     UserButtonStatus = 1;
 479              		.loc 1 281 5 view .LVU123
 480              		.loc 1 281 22 is_stmt 0 view .LVU124
 481 0018 014B     		ldr	r3, .L37
 482 001a 0122     		movs	r2, #1
 483 001c 1A60     		str	r2, [r3]
 282:Src/main.c    ****   }
 283:Src/main.c    **** }
 484              		.loc 1 283 1 view .LVU125
 485 001e 08BD     		pop	{r3, pc}
 486              	.L38:
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 16


 487              		.align	2
 488              	.L37:
 489 0020 00000000 		.word	.LANCHOR1
 490              		.cfi_endproc
 491              	.LFE135:
 493              		.global	uwStandByOutFlag
 494              		.global	uwWakeUpIntFlag
 495              		.global	UserButtonStatus
 496              		.section	.bss.UserButtonStatus,"aw",%nobits
 497              		.align	2
 498              		.set	.LANCHOR1,. + 0
 501              	UserButtonStatus:
 502 0000 00000000 		.space	4
 503              		.section	.bss.uwStandByOutFlag,"aw",%nobits
 504              		.align	2
 505              		.set	.LANCHOR0,. + 0
 508              	uwStandByOutFlag:
 509 0000 00000000 		.space	4
 510              		.section	.bss.uwWakeUpIntFlag,"aw",%nobits
 511              		.align	2
 512              		.set	.LANCHOR2,. + 0
 515              	uwWakeUpIntFlag:
 516 0000 00000000 		.space	4
 517              		.text
 518              	.Letext0:
 519              		.file 2 "/Users/brunoflores/Downloads/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/mac
 520              		.file 3 "/Users/brunoflores/Downloads/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys
 521              		.file 4 "STM32Cube_FW_F3_V1.11.1/Drivers/CMSIS/Include/core_cm4.h"
 522              		.file 5 "STM32Cube_FW_F3_V1.11.1/Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 523              		.file 6 "STM32Cube_FW_F3_V1.11.1/Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xc.h"
 524              		.file 7 "STM32Cube_FW_F3_V1.11.1/Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 525              		.file 8 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 526              		.file 9 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 527              		.file 10 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 528              		.file 11 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rtc.h"
 529              		.file 12 "STM32Cube_FW_F3_V1.11.1/Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 530              		.file 13 "STM32Cube_FW_F3_V1.11.1/Drivers/BSP/STM32F3-Discovery/stm32f3_discovery.h"
 531              		.file 14 "Inc/stm32f3xx_lp_modes.h"
ARM GAS  /var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:18     .text.Error_Handler:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:26     .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:56     .text.SystemClock_Config:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:62     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:154    .text.main:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:161    .text.main:0000000000000000 main
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:349    .text.main:00000000000000d8 $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:358    .text.HAL_SYSTICK_Callback:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:365    .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:385    .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:392    .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000000 HAL_RTCEx_WakeUpTimerEventCallback
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:433    .text.HAL_RTCEx_WakeUpTimerEventCallback:0000000000000024 $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:438    .text.HAL_GPIO_EXTI_Callback:0000000000000000 $t
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:445    .text.HAL_GPIO_EXTI_Callback:0000000000000000 HAL_GPIO_EXTI_Callback
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:489    .text.HAL_GPIO_EXTI_Callback:0000000000000020 $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:508    .bss.uwStandByOutFlag:0000000000000000 uwStandByOutFlag
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:515    .bss.uwWakeUpIntFlag:0000000000000000 uwWakeUpIntFlag
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:501    .bss.UserButtonStatus:0000000000000000 UserButtonStatus
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:497    .bss.UserButtonStatus:0000000000000000 $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:504    .bss.uwStandByOutFlag:0000000000000000 $d
/var/folders/5l/y8xcsg6s4873r8dg5jznx69w0000gn/T//cczPjLL0.s:511    .bss.uwWakeUpIntFlag:0000000000000000 $d

UNDEFINED SYMBOLS
BSP_LED_Init
BSP_LED_On
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
BSP_PB_Init
BSP_PB_GetState
BSP_LED_Toggle
HAL_Delay
BSP_LED_Off
StopRTCMode_Measure
HAL_IncTick
